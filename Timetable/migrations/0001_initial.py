# Generated by Django 5.0.3 on 2025-07-23 12:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('day_name', models.CharField(max_length=10)),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='LabType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('code', models.CharField(max_length=20, unique=True)),
                ('is_lecture_slot', models.BooleanField(default=True)),
                ('is_exam_slot', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Timetable.building')),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('level', models.PositiveIntegerField()),
                ('size', models.PositiveIntegerField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.department')),
            ],
            options={
                'verbose_name_plural': 'Classes',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('availability', models.JSONField(blank=True, null=True)),
                ('proctor_availability', models.JSONField(blank=True, null=True)),
                ('is_proctor', models.BooleanField(default=False)),
                ('max_courses', models.PositiveIntegerField(default=4)),
                ('is_active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.department')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('credit_hours', models.PositiveIntegerField()),
                ('enrollment', models.PositiveIntegerField()),
                ('requires_lab', models.BooleanField(default=False)),
                ('classes', models.ManyToManyField(related_name='courses', to='Timetable.class')),
                ('course_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.coursetype')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.department')),
                ('lab_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Timetable.labtype')),
                ('lecturers', models.ManyToManyField(related_name='courses', to='Timetable.lecturer')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('capacity', models.PositiveIntegerField()),
                ('dimensions', models.CharField(max_length=20)),
                ('max_courses', models.PositiveIntegerField(default=1)),
                ('proctors_required', models.PositiveIntegerField(default=1)),
                ('is_overflow', models.BooleanField(default=False)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.building')),
                ('lab_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Timetable.labtype')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.roomtype')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ProctorAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_available', models.BooleanField(default=True)),
                ('exam_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.examdate')),
                ('proctor', models.ForeignKey(limit_choices_to={'is_proctor': True}, on_delete=django.db.models.deletion.CASCADE, to='Timetable.lecturer')),
            ],
            options={
                'unique_together': {('proctor', 'exam_date')},
            },
        ),
    ]
